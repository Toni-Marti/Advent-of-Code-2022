/*
--- Part Two ---

A rope snaps! Suddenly, the river is getting a lot closer than you remember. 
The bridge is still there, but some of the ropes that broke are now whipping 
toward you as you fall through the air!

The ropes are moving too quickly to grab; you only have a few seconds to 
choose how to arch your body to avoid being hit. Fortunately, your simulation 
can be extended to support longer ropes.

Rather than two knots, you now must simulate a rope consisting of ten knots. 
One knot is still the head of the rope and moves according to the series of 
motions. Each knot further down the rope follows the knot in front of it using 
the same rules as before.

Using the same series of motions as the above example, but with the knots 
marked H, 1, 2, ..., 9, the motions now occur as follows:

== Initial State ==

......
......
......
......
H.....  (H covers 1, 2, 3, 4, 5, 6, 7, 8, 9, s)

== R 4 ==

......
......
......
......
1H....  (1 covers 2, 3, 4, 5, 6, 7, 8, 9, s)

......
......
......
......
21H...  (2 covers 3, 4, 5, 6, 7, 8, 9, s)

......
......
......
......
321H..  (3 covers 4, 5, 6, 7, 8, 9, s)

......
......
......
......
4321H.  (4 covers 5, 6, 7, 8, 9, s)

== U 4 ==

......
......
......
....H.
4321..  (4 covers 5, 6, 7, 8, 9, s)

......
......
....H.
.4321.
5.....  (5 covers 6, 7, 8, 9, s)

......
....H.
....1.
.432..
5.....  (5 covers 6, 7, 8, 9, s)

....H.
....1.
..432.
.5....
6.....  (6 covers 7, 8, 9, s)

== L 3 ==

...H..
....1.
..432.
.5....
6.....  (6 covers 7, 8, 9, s)

..H1..
...2..
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

.H1...
...2..
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

== D 1 ==

..1...
.H.2..
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

== R 4 ==

..1...
..H2..
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

..1...
...H..  (H covers 2)
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

......
...1H.  (1 covers 2)
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

......
...21H
..43..
.5....
6.....  (6 covers 7, 8, 9, s)

== D 1 ==

......
...21.
..43.H
.5....
6.....  (6 covers 7, 8, 9, s)

== L 5 ==

......
...21.
..43H.
.5....
6.....  (6 covers 7, 8, 9, s)

......
...21.
..4H..  (H covers 3)
.5....
6.....  (6 covers 7, 8, 9, s)

......
...2..
..H1..  (H covers 4; 1 covers 3)
.5....
6.....  (6 covers 7, 8, 9, s)

......
...2..
.H13..  (1 covers 4)
.5....
6.....  (6 covers 7, 8, 9, s)

......
......
H123..  (2 covers 4)
.5....
6.....  (6 covers 7, 8, 9, s)

== R 2 ==

......
......
.H23..  (H covers 1; 2 covers 4)
.5....
6.....  (6 covers 7, 8, 9, s)

......
......
.1H3..  (H covers 2, 4)
.5....
6.....  (6 covers 7, 8, 9, s)

Now, you need to keep track of the positions the new tail, 9, visits. In this 
example, the tail never moves, and so it only visits 1 position. However, be 
careful: more types of motion are possible than before, so you might want to 
visually compare your simulated rope to the one above.

Here's a larger example:

R 5
U 8
L 8
D 3
R 17
D 10
L 25
U 20

These motions occur as follows (individual steps are not shown):

== Initial State ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
...........H..............  (H covers 1, 2, 3, 4, 5, 6, 7, 8, 9, s)
..........................
..........................
..........................
..........................
..........................

== R 5 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
...........54321H.........  (5 covers 6, 7, 8, 9, s)
..........................
..........................
..........................
..........................
..........................

== U 8 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
................H.........
................1.........
................2.........
................3.........
...............54.........
..............6...........
.............7............
............8.............
...........9..............  (9 covers s)
..........................
..........................
..........................
..........................
..........................

== L 8 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
........H1234.............
............5.............
............6.............
............7.............
............8.............
............9.............
..........................
..........................
...........s..............
..........................
..........................
..........................
..........................
..........................

== D 3 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
.........2345.............
........1...6.............
........H...7.............
............8.............
............9.............
..........................
..........................
...........s..............
..........................
..........................
..........................
..........................
..........................

== R 17 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
................987654321H
..........................
..........................
..........................
..........................
...........s..............
..........................
..........................
..........................
..........................
..........................

== D 10 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
...........s.........98765
.........................4
.........................3
.........................2
.........................1
.........................H

== L 25 ==

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
...........s..............
..........................
..........................
..........................
..........................
H123456789................

== U 20 ==

H.........................
1.........................
2.........................
3.........................
4.........................
5.........................
6.........................
7.........................
8.........................
9.........................
..........................
..........................
..........................
..........................
..........................
...........s..............
..........................
..........................
..........................
..........................
..........................

Now, the tail (9) visits 36 positions (including s) at least once:

..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
..........................
#.........................
#.............###.........
#............#...#........
.#..........#.....#.......
..#..........#.....#......
...#........#.......#.....
....#......s.........#....
.....#..............#.....
......#............#......
.......#..........#.......
........#........#........
.........########.........

Simulate your complete series of motions on a larger rope with ten knots. How 
many positions does the tail of the rope visit at least once?
*/

// Compilar con:
// g++ Day9_2.cpp -o Day9_2.bin

#include <iostream>
#include <fstream>
#include <set>
#include <stdlib.h>
#include <string>
#include <vector>

using namespace std;

struct vec2d {
	int x = 0, y = 0;

	vec2d(int x=0, int y=0) {
		this->x = x;
		this->y = y;
	}

	vec2d operator+(const vec2d &other) const{
		vec2d suma = *this;
		suma += other;
		return suma;
	}

	vec2d &operator+=(const vec2d &other) {
		x += other.x;
		y += other.y;
		return *this;
	}

	vec2d operator-() const{
		return vec2d(-x, -y);
	}

	vec2d operator-(const vec2d &other) const{
		vec2d suma = *this;
		suma += -other;
		return suma;
	}

	vec2d &operator-=(const vec2d &other) {
		*this += -other;
		return *this;
	}

	bool operator==(const vec2d &other) const{
		return x == other.x && y == other.y;
	}
	
	string toString() {
		return to_string(x) + "," + to_string(y);
	}
};

void mueve(vec2d& pos, char dir) {
	switch(dir) {
	case 'U':
		pos += vec2d(0, 1);
		break;
	case 'R':
		pos += vec2d(1, 0);
		break;
	case 'D':
		pos += vec2d(0, -1);
		break;
	case 'L':
		pos += vec2d(-1, 0);
		break;
	}
}

int clamp (int val, int min = -1, int max = 1) {
	if(val >= max) return max;
	if(val <= min) return min;
	return val;
}

void ActualizaTail(vec2d& tail, const vec2d& head) {
	vec2d direccion = head - tail;
	bool seMueve = abs(direccion.x) >= 2 || abs(direccion.y) >= 2;

	if(!seMueve) return;

	direccion.x = clamp(direccion.x);
	direccion.y = clamp(direccion.y);

	tail += direccion;
}

int main(int argc, char *argv[]){
	ifstream arch_entrada;
	string ruta_arch = "Entrada.txt";

	if(argc > 2) {
		cerr << "ERROR: Demasiados argumentos." << endl;
		return -1;
	}
	else if( argc == 2) {
		ruta_arch = argv[1];
	}

	arch_entrada.open(ruta_arch);

	if(!arch_entrada.is_open()) {
		cerr << "ERROR: No se pudo abrir el archivo: " << ruta_arch << endl;
		return -2;
	}
	
	const int KNOTS = 10; // Contando la cabeza
	const int TAILS = KNOTS - 1;
	vec2d H_pos;
	vector<vec2d> knots(TAILS);
	vec2d &T_pos = knots[TAILS - 1];
	set<string> recorrido;
	recorrido.insert(T_pos.toString());

	char direccion;
	int veces;
	
	while(!arch_entrada.eof()) {
		arch_entrada >> direccion;
		arch_entrada >> veces;
		
		if(arch_entrada.eof()) break;
		
		// Actualizamos los nodos
		for(int i=0; i<veces; i++) {
			mueve(H_pos, direccion);
			ActualizaTail(knots[0], H_pos);
			for(int i=1; i<TAILS; i++) {
				ActualizaTail(knots[i], knots[i-1]);
			}
			recorrido.insert(T_pos.toString());
		}
	}

	cout << "SOLUCION: " << recorrido.size() << endl;

	return recorrido.size();
}

// != 76



